# Generated by Django 4.2.7 on 2025-06-17 16:20

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Transcript",
            fields=[
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "fireflies_id",
                    models.CharField(db_index=True, max_length=255, unique=True),
                ),
                ("title", models.CharField(blank=True, max_length=500)),
                ("meeting_date", models.DateTimeField()),
                ("duration_minutes", models.PositiveIntegerField(default=0)),
                ("participant_count", models.PositiveIntegerField(default=0)),
                ("raw_data", models.JSONField(default=dict)),
                ("content", models.TextField(blank=True)),
                ("is_processed", models.BooleanField(default=False)),
                ("processed_at", models.DateTimeField(blank=True, null=True)),
                ("processing_errors", models.JSONField(default=list)),
            ],
            options={
                "db_table": "core_transcripts",
                "indexes": [
                    models.Index(
                        fields=["fireflies_id"], name="core_transc_firefli_cc6592_idx"
                    ),
                    models.Index(
                        fields=["meeting_date"], name="core_transc_meeting_b63c3c_idx"
                    ),
                    models.Index(
                        fields=["is_processed"], name="core_transc_is_proc_ecab69_idx"
                    ),
                    models.Index(
                        fields=["created_at"], name="core_transc_created_1e7d39_idx"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="DailyReport",
            fields=[
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("report_date", models.DateField(db_index=True, unique=True)),
                ("summary", models.TextField()),
                ("key_insights", models.JSONField(default=list)),
                ("task_statistics", models.JSONField(default=dict)),
                ("ai_model_version", models.CharField(blank=True, max_length=50)),
                ("generation_duration", models.FloatField(default=0.0)),
                ("source_transcripts_count", models.PositiveIntegerField(default=0)),
                ("source_tasks_count", models.PositiveIntegerField(default=0)),
            ],
            options={
                "db_table": "core_daily_reports",
                "indexes": [
                    models.Index(
                        fields=["report_date"], name="core_daily__report__d6d383_idx"
                    ),
                    models.Index(
                        fields=["created_at"], name="core_daily__created_bbefa7_idx"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="SystemEvent",
            fields=[
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "event_type",
                    models.CharField(
                        choices=[
                            ("transcript_sync", "Transcript Sync"),
                            ("task_extraction", "Task Extraction"),
                            ("task_review", "Task Review"),
                            ("task_delivery", "Task Delivery"),
                            ("system_error", "System Error"),
                            ("guardian_alert", "Guardian Alert"),
                            ("health_check", "Health Check"),
                        ],
                        max_length=50,
                    ),
                ),
                (
                    "severity",
                    models.CharField(
                        choices=[
                            ("info", "Info"),
                            ("warning", "Warning"),
                            ("error", "Error"),
                            ("critical", "Critical"),
                        ],
                        default="info",
                        max_length=10,
                    ),
                ),
                ("message", models.CharField(max_length=500)),
                ("details", models.JSONField(default=dict)),
                (
                    "correlation_id",
                    models.CharField(blank=True, db_index=True, max_length=100),
                ),
                ("source_module", models.CharField(blank=True, max_length=50)),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="system_events",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "core_system_events",
                "indexes": [
                    models.Index(
                        fields=["event_type"], name="core_system_event_t_2c44fb_idx"
                    ),
                    models.Index(
                        fields=["severity"], name="core_system_severit_c96466_idx"
                    ),
                    models.Index(
                        fields=["correlation_id"], name="core_system_correla_f4d98d_idx"
                    ),
                    models.Index(
                        fields=["source_module"], name="core_system_source__d23d25_idx"
                    ),
                    models.Index(
                        fields=["created_at"], name="core_system_created_d74d14_idx"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="ActionItem",
            fields=[
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("title", models.CharField(max_length=200)),
                ("description", models.TextField()),
                ("assignee", models.CharField(blank=True, max_length=100)),
                ("due_date", models.DateField(blank=True, null=True)),
                (
                    "priority",
                    models.CharField(
                        choices=[
                            ("low", "Low"),
                            ("medium", "Medium"),
                            ("high", "High"),
                            ("urgent", "Urgent"),
                        ],
                        default="medium",
                        max_length=10,
                    ),
                ),
                ("confidence_score", models.FloatField(default=0.0)),
                ("ai_model_version", models.CharField(blank=True, max_length=50)),
                ("extraction_metadata", models.JSONField(default=dict)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending Review"),
                            ("approved", "Approved"),
                            ("rejected", "Rejected"),
                            ("delivered", "Delivered to Monday.com"),
                            ("failed", "Delivery Failed"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("reviewed_at", models.DateTimeField(blank=True, null=True)),
                ("review_notes", models.TextField(blank=True)),
                ("monday_item_id", models.CharField(blank=True, max_length=100)),
                ("delivered_at", models.DateTimeField(blank=True, null=True)),
                ("delivery_errors", models.JSONField(default=list)),
                ("auto_push_after", models.DateTimeField(blank=True, null=True)),
                (
                    "reviewed_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="reviewed_tasks",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "transcript",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="action_items",
                        to="core.transcript",
                    ),
                ),
            ],
            options={
                "db_table": "core_action_items",
                "indexes": [
                    models.Index(
                        fields=["transcript"], name="core_action_transcr_370163_idx"
                    ),
                    models.Index(
                        fields=["status"], name="core_action_status_3ae0f6_idx"
                    ),
                    models.Index(
                        fields=["due_date"], name="core_action_due_dat_eb8045_idx"
                    ),
                    models.Index(
                        fields=["priority"], name="core_action_priorit_5bda37_idx"
                    ),
                    models.Index(
                        fields=["auto_push_after"],
                        name="core_action_auto_pu_6cd8e6_idx",
                    ),
                    models.Index(
                        fields=["created_at"], name="core_action_created_aed5f2_idx"
                    ),
                ],
            },
        ),
    ]
