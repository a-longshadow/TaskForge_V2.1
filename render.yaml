services:
  # Web Service - Django Application
  - type: web
    name: taskforge-web
    env: python
    plan: free
    buildCommand: pip install -r requirements.txt && python manage.py collectstatic --noinput
    startCommand: gunicorn taskforge.wsgi:application --bind 0.0.0.0:$PORT --workers 2 --timeout 120
    healthCheckPath: /health/
    envVars:
      - key: DJANGO_SETTINGS_MODULE
        value: taskforge.settings.production
      - key: PYTHON_VERSION
        value: 3.12.0
      - key: DEBUG
        value: False
      - key: DATABASE_URL
        fromDatabase:
          name: taskforge-db
          property: connectionString
      # These will need to be set manually in Render dashboard:
      # - SECRET_KEY
      # - FIREFLIES_API_KEY  
      # - GEMINI_API_KEY
      # - MONDAY_API_KEY
      # - MONDAY_BOARD_ID
      # - MONDAY_GROUP_ID

  # Cache Refresh Cron Job
  - type: cron
    name: cache-refresh
    env: python
    plan: free
    schedule: "0 */4 * * *"  # Every 4 hours
    buildCommand: pip install -r requirements.txt
    startCommand: python manage.py auto_refresh_cache
    envVars:
      - key: DJANGO_SETTINGS_MODULE
        value: taskforge.settings.production
      - key: DATABASE_URL
        fromDatabase:
          name: taskforge-db
          property: connectionString

  # Daily Analytics Cron Job  
  - type: cron
    name: daily-analytics
    env: python
    plan: free
    schedule: "0 1 * * *"  # Daily at 1 AM UTC
    buildCommand: pip install -r requirements.txt
    startCommand: python manage.py generate_daily_analytics
    envVars:
      - key: DJANGO_SETTINGS_MODULE
        value: taskforge.settings.production
      - key: DATABASE_URL
        fromDatabase:
          name: taskforge-db
          property: connectionString

databases:
  # PostgreSQL Database
  - name: taskforge-db
    plan: free
    databaseName: taskforge
    user: taskforge_user 